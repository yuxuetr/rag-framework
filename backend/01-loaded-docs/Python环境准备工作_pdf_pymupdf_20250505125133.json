{
  "filename": "Python环境准备工作.pdf",
  "document_type": "pdf",
  "total_chunks": 23,
  "total_pages": 25,
  "loading_method": "pymupdf",
  "loading_strategy": null,
  "chunking_strategy": null,
  "chunking_method": "loaded",
  "timestamp": "2025-05-05T12:51:33.300268",
  "chunks": [
    {
      "content": "黄佳\n新加坡科研局资深AI工程师\n大模型RAG进阶实战营– 准备篇\n代码下载及安装系统环境",
      "metadata": {
        "chunk_id": 1,
        "page_number": 1,
        "page_range": "1",
        "word_count": 5
      }
    },
    {
      "content": "下载代码库",
      "metadata": {
        "chunk_id": 2,
        "page_number": 2,
        "page_range": "2",
        "word_count": 1
      }
    },
    {
      "content": "访问https://github.com/huangjia2019 ，然后点击“Repositories”",
      "metadata": {
        "chunk_id": 3,
        "page_number": 3,
        "page_range": "3",
        "word_count": 2
      }
    },
    {
      "content": "点击进入名为“rag-in-action”这个仓库",
      "metadata": {
        "chunk_id": 4,
        "page_number": 4,
        "page_range": "4",
        "word_count": 1
      }
    },
    {
      "content": "https://github.com/huangjia2019/rag-in-action\n使用Git命令“git clone https://github.com/huangjia2019/rag-in-action.git” 将仓库代码克隆至本地",
      "metadata": {
        "chunk_id": 5,
        "page_number": 5,
        "page_range": "5",
        "word_count": 5
      }
    },
    {
      "content": "https://github.com/huangjia2019/rag-in-action\n如果对Git命令不熟悉，可以点击绿色的“Code”下拉按钮，选择“Download ZIP”，将打包后代码文件下载至本地",
      "metadata": {
        "chunk_id": 6,
        "page_number": 6,
        "page_range": "6",
        "word_count": 3
      }
    },
    {
      "content": "安装Python环境",
      "metadata": {
        "chunk_id": 7,
        "page_number": 7,
        "page_range": "7",
        "word_count": 1
      }
    },
    {
      "content": "这里是我们项目要用到的Python包，建议先使用\n红框框起来的两个文件来批量安装项目所需的包。",
      "metadata": {
        "chunk_id": 8,
        "page_number": 8,
        "page_range": "8",
        "word_count": 2
      }
    },
    {
      "content": "# 创建对应的Python虚拟开发环境\npython3 -m venv 20250306_LangChain  （红色部分可以换成自己喜欢的名字）\npython3 -m venv 20250306_LlamaIndex（红色部分可以换成自己喜欢的名字）\n新创建的环境",
      "metadata": {
        "chunk_id": 9,
        "page_number": 9,
        "page_range": "9",
        "word_count": 12
      }
    },
    {
      "content": "# Linux、macOS 等系统使用如下命令激活\nsource 20250306_LangChain/bin/activate\n激活这个新环境\n# Windows 系统使用如下命令激活\n20250306_LangChain\\Scripts\\activate",
      "metadata": {
        "chunk_id": 10,
        "page_number": 10,
        "page_range": "10",
        "word_count": 10
      }
    },
    {
      "content": "# 更新pip 版本\npip install --upgrade pip\n# 通过requirements 文件批量安装对应项目环境所需要的包\npip install -r /你的目录/requirements_langchain_简单RAG.txt",
      "metadata": {
        "chunk_id": 11,
        "page_number": 11,
        "page_range": "11",
        "word_count": 14
      }
    },
    {
      "content": "# 退出当前环境，重复之前的步骤激活下一个环境，并用对应的requirements文件安装对应的包\ndeactivate\npip check",
      "metadata": {
        "chunk_id": 12,
        "page_number": 12,
        "page_range": "12",
        "word_count": 5
      }
    },
    {
      "content": "用Cursor 代码编辑器打开项目代码文件，点击红色箭头所示位置，选择对应的Python 解释器。",
      "metadata": {
        "chunk_id": 13,
        "page_number": 13,
        "page_range": "13",
        "word_count": 3
      }
    },
    {
      "content": "选好之后的效果",
      "metadata": {
        "chunk_id": 14,
        "page_number": 15,
        "page_range": "15",
        "word_count": 1
      }
    },
    {
      "content": "安装并配置Jupyter Notebook",
      "metadata": {
        "chunk_id": 15,
        "page_number": 16,
        "page_range": "16",
        "word_count": 2
      }
    },
    {
      "content": "安装Jupyter Notebook\npip install notebook\nsource 20250306_LangChain/bin/activate\n# 安装Jupyter Notebook\n# 激活环境\npip install ipykernel\n# 安装ipykernel\npython -m ipykernel install --user --name 20250306_LangChain --display-name \"Python 3 (20250306_LangChain)\"\n# 将该环境注册到Jupyter\ndeactivate\n# 退出环境",
      "metadata": {
        "chunk_id": 16,
        "page_number": 18,
        "page_range": "18",
        "word_count": 33
      }
    },
    {
      "content": "jupyter notebook\n运行Jupyter Notebook\n选择匹配的环境",
      "metadata": {
        "chunk_id": 17,
        "page_number": 19,
        "page_range": "19",
        "word_count": 5
      }
    },
    {
      "content": "jupyter kernelspec list\n确认Jupyter 内核是否正确安装",
      "metadata": {
        "chunk_id": 18,
        "page_number": 20,
        "page_range": "20",
        "word_count": 5
      }
    },
    {
      "content": "使用Colab",
      "metadata": {
        "chunk_id": 19,
        "page_number": 21,
        "page_range": "21",
        "word_count": 1
      }
    },
    {
      "content": "https://colab.research.google.com/",
      "metadata": {
        "chunk_id": 20,
        "page_number": 22,
        "page_range": "22",
        "word_count": 1
      }
    },
    {
      "content": "设置大模型API",
      "metadata": {
        "chunk_id": 21,
        "page_number": 23,
        "page_range": "23",
        "word_count": 1
      }
    },
    {
      "content": "https://platform.deepseek.com/",
      "metadata": {
        "chunk_id": 22,
        "page_number": 24,
        "page_range": "24",
        "word_count": 1
      }
    },
    {
      "content": "将获取到的API Key 设置到系统环境变量，具体步骤请参考：\nhttps://zhuanlan.zhihu.com/p/627665725\nDeepSeek API Key 的设置方法与此类似。",
      "metadata": {
        "chunk_id": 23,
        "page_number": 25,
        "page_range": "25",
        "word_count": 8
      }
    }
  ]
}